name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-backend:
    name: ðŸ§ª Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v3
      - name: Install backend dependencies
        run: npm install
      - name: Run backend tests
        run: npm test || echo "No tests found"

  test-frontend:
    name: ðŸ§ª Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v3
      - name: Install frontend dependencies
        run: npm install
      - name: Build frontend
        run: npm run build

  deploy-frontend:
    name: ðŸš€ Deploy Frontend (Vercel)
    needs: [test-frontend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Vercel Deployment
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          working-directory: ./client
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy-backend:
    name: ðŸš€ Deploy Backend (Render)
    needs: [test-backend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render (via webhook)
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}


  # Run health checks after deployment
  health-check:
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    
    steps:
      - name: Check backend health
        uses: jtalk/url-health-check-action@v3
        with:
          url: ${{ secrets.BACKEND_URL }}/api/health
          max-attempts: 3
          retry-delay: 5s
      
      - name: Check frontend
        uses: jtalk/url-health-check-action@v3
        with:
          url: ${{ secrets.FRONTEND_URL }}
          max-attempts: 3
          retry-delay: 5s 