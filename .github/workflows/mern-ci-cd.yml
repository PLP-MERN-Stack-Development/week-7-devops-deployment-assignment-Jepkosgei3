name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

env:
  NODE_ENV: production

jobs:
  test-backend:
    name: ðŸ§ª Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Backend Dependencies
        run: pnpm install

      - name: Run Backend Tests
        run: pnpm test || echo "No tests found"

  test-frontend:
    name: ðŸ§ª Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Frontend Dependencies
        run: |
          npm install --legacy-peer-deps
          if ! npm list @vitejs/plugin-react; then
            echo "Installing missing plugin-react..."
            npm install @vitejs/plugin-react@latest
          fi

      - name: Build Frontend
        run: pnpm run build

  deploy-frontend:
    name: ðŸš€ Deploy Frontend to Vercel
    environment: ChatApp
    needs: [test-frontend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./client
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: âœ… Check Frontend Health
        run: |
          echo "Checking frontend at ${{ secrets.FRONTEND_URL }}"
          curl -sSf ${{ secrets.FRONTEND_URL }}

  deploy-backend:
    name: ðŸš€ Deploy Backend to Render
    environment: ChatApp
    needs: [test-backend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

      - name: ðŸ©º Check Backend Health
        run: |
          echo "Waiting 30s for backend to restart..."
          sleep 30
          echo "Checking backend at ${{ secrets.BACKEND_URL }}/health"
          curl -sSf ${{ secrets.BACKEND_URL }}/health
